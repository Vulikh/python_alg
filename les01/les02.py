import random 

#commit

# 1. Написать программу, которая будет складывать, вычитать, умножать или делить два числа. 
# Числа и знак операции вводятся пользователем. После выполнения вычисления программа не должна 
# завершаться, а должна запрашивать новые данные для вычислений. Завершение программы должно выполняться
# при вводе символа '0' в качестве знака операции. Если пользователь вводит неверный знак 
# (не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и снова запрашивать знак операции. 
# Также сообщать пользователю о невозможности деления на ноль, если он ввел 0 в качестве делителя.

isRun = True

while isRun:
    operation = input('Введите знак операции')
    if operation == '0':
        print('Выход')
        isRun = False
    else:
        oper1, oper2 = input('Введите операнды через пробел').split()
        oper1, oper2 = int(oper1), int(oper2)
        if operation == '+':
            sum = oper1+oper2
            print(f'Сумма равна {sum}')
        elif operation == '-':
            diff = oper1 - oper2
            print(f'Разность равна {diff}')
        elif operation == '*':
            mult = oper1*oper2
            print(f'Произведение равно {mult}')
        elif operation == '/':
            if oper2 != 0:
                div = oper1 / oper2
                print(f'Результат деления равен {div}')
            else:
                print('На ноль делить нельзя')
        else:
            print('Введен неверный знак операции')


# 2. Посчитать четные и нечетные цифры введенного натурального числа. Например, если введено число 34560, 
# то у него 3 четные цифры (4, 6 и 0) и 2 нечетные (3 и 5).

number = input('Введите число ')

evens = 0
odds = 0

for _ in number:
  if int(_) % 2 == 0:
      evens += 1
  else:
      odds += 1

print(f'В числе {evens} четных и {odds} нечетных чисел')

# 3. Сформировать из введенного числа обратное по порядку входящих в него цифр и вывести на экран. 
# Например, если введено число 3486, то надо вывести число 6843.

number = input('Введите число ')

print(number[::-1])

# 4. Найти сумму n элементов следующего ряда чисел: 1 -0.5 0.25 -0.125 ...Количество элементов (n) 
# вводится с клавиатуры.

n = int(input('Введите количество элементов'))

sum = 0

for i in range(n):
  sum += (-0.5)**(n)

print(f'Сумма элементов :{sum}')

# 5. Вывести на экран коды и символы таблицы ASCII, начиная с символа под номером 32 и заканчивая 127-м включительно. 
# Вывод выполнить в табличной форме: по десять пар "код-символ" в каждой строке.

for i in range(96):
  print(i+32, chr(i+32), end= ' ')
  if i % 10 == 0 and i != 0:
      print('\n')

# 6. В программе генерируется случайное целое число от 0 до 100. Пользователь должен его отгадать не более чем за 
# 10 попыток. После каждой неудачной попытки должно сообщаться больше или меньше введенное пользователем число, чем то, 
# что загадано. Если за 10 попыток число не отгадано, то вывести загаданное число.


number = random.randint(0, 100)

attempt = 10 

isRun = True

while attempt != 0 and isRun == True:
    guess = int(input('Угадайте загаданное число: '))
    if guess == number:
        print('Вы угадали!')
        isRun = False
    elif guess > number:
        attempt -= 1
        print(f'Вы не угадали, ваше число больше загаданного, осталось попыток {attempt}')
    else:
        attempt -= 1
        print(f'Вы не угадали, ваше число меньше загаданного, осталось попыток {attempt}')

if attempt == 0:
    print(f'Вы проиграли, загаданное число {number}')



# 7. Напишите программу, доказывающую или проверяющую, что для множества натуральных чисел выполняется равенство: 
# 1+2+...+n = n(n+1)/2, где n - любое натуральное число.

n = int(input('Введите число'))

sum = 0

for i in range(1, n+1):
    if i != n:
        sum += i
        print(i,  end = '')
        print('+',end ='')
    else:
        sum += i
        print(i, end = '')
print(' = ', end = '')

eq = int(n * (n+1) / 2)

print(eq)

if sum == eq:
    print('Равенство выполняется')


# 8. Посчитать, сколько раз встречается определенная цифра в введенной последовательности чисел. Количество вводимых 
# чисел и цифра, которую необходимо посчитать, задаются вводом с клавиатуры.


# 9. Среди натуральных чисел, которые были введены, найти наибольшее по сумме цифр. Вывести на экран это число и сумму
 # его цифр.

